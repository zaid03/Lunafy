import React, { useState } from 'react';
import './PlaylistCreator.css';

function PlaylistCreator({ timeRange, onClose, onSuccess }) {
  const [playlistName, setPlaylistName] = useState('');
  const [isCreating, setIsCreating] = useState(false);

  const getTimeRangeText = () => {
    switch(timeRange) {
      case 'short_term': return 'Last 4 Weeks';
      case 'medium_term': return 'Last 6 Months';
      case 'long_term': return 'All Time';
      default: return 'Medium Term';
    }
  };

  const getDefaultName = () => {
    const timeText = getTimeRangeText();
    const date = new Date().toLocaleDateString();
    return `My Top Songs - ${timeText} (${date})`;
  };

  useState(() => {
    setPlaylistName(getDefaultName());
  }, [timeRange]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsCreating(true);

    try {
      const response = await fetch('http://127.0.0.1:5000/api/create-playlist', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        body: JSON.stringify({
          name: playlistName,
          description: `My top songs from ${getTimeRangeText()} - Generated by Lunafy`,
          timeRange: timeRange
        }),
      });

      const data = await response.json();

      if (response.ok) {
        onSuccess(data.playlist);
        onClose();
      } else {
        alert(`Failed to create playlist: ${data.error}`);
      }
    } catch (error) {
      console.error('Error creating playlist:', error);
      alert('Network error: Failed to create playlist');
    } finally {
      setIsCreating(false);
    }
  };

  return (
    <div className="playlist-overlay">
      <div className="playlist-modal">
        <div className="playlist-header">
          <h3>Create Spotify Playlist</h3>
          <button className="close-btn" onClick={onClose}>Ã—</button>
        </div>
        
        <form onSubmit={handleSubmit} className="playlist-form">
          <div className="form-group">
            <label htmlFor="playlistName">Playlist Name:</label>
            <input
              type="text"
              id="playlistName"
              value={playlistName}
              onChange={(e) => setPlaylistName(e.target.value)}
              placeholder="Enter playlist name..."
              required
              maxLength={100}
            />
          </div>
          
          <div className="playlist-info">
            <p><strong>Time Range:</strong> {getTimeRangeText()}</p>
            <p><strong>Songs:</strong> Up to 50 of your top songs</p>
            <p><strong>Privacy:</strong> Private playlist (only you can see it)</p>
          </div>
          
          <div className="playlist-actions">
            <button 
              type="submit" 
              className="create-btn"
              disabled={isCreating || !playlistName.trim()}
            >
              {isCreating ? 'Creating...' : 'Create Playlist'}
            </button>
            <button 
              type="button" 
              className="cancel-btn" 
              onClick={onClose}
              disabled={isCreating}
            >
              Cancel
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

export default PlaylistCreator;